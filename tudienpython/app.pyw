# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QMessageBox
from app_ui import Ui_MainWindow
from pydb import Database
from themtu import ThemTu
from google_trans_new import google_translator  
from PyQt5.QtGui import QIcon


class App(QMainWindow):
    def __init__(self):
        super().__init__()
        self.translator = google_translator() 
        self.setWindowIcon(QIcon('icon.png')) 
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)
        self.run()
        self.show()
        self.path = r"./database/data_word.db"
        self.database = Database(self.path)
        self.count = "no save"
        self.flag_mean = ""
        self.statusSua_Them = False
        self.list_word_items = [] 

    def them(self):
        # neu tu khong ton tai thi co the them vao truc tiep
        # kiem tra su hop le 

        # if self.ui.textEdit_nhap.toPlainText().strip() != "" and self.ui.textEdit_xuat.toPlainText().strip() != "":

            
        #     list_text = self.ui.textEdit_nhap.toPlainText().strip()
        #     query = "INSERT INTO word (e_word, e_type, e_pronouce, e_des, e_mean) VALUES ({list_text[]}, {list_text[]},{list_text[]}, {list_text[]},{list_text[]} )"
        #     self.statusBar().showMessage("them thanh cong")

        # else:
        #     print("khong duoc")
        self.themtu = ThemTu()

    def sua(self):
        

        # if self.ui.textEdit_nhap.toPlainText().strip() != "":
        if self.ui.textEdit_xuat.toPlainText().strip() != "":
            print("duoc")
            # sua nut sua thanh nut luu, chua luu
            if self.count == "no save":
                if self.ui.textEdit_xuat.toPlainText().strip() == "từ này không tồn tại, bạn có thể thêm từ này bằng cách nhấn sửa và lưu" :
                    mess = f"Từ:\nTừ loại:\nPhát âm:\nMiêu tả:\nNghĩa:"
                    self.ui.textEdit_xuat.setPlainText(mess)
                    self.statusSua_Them = True
                # dang sua
                self.ui.textEdit_xuat.setReadOnly(False)
                self.ui.pushButton_suatu.setText("Lưu")
                self.count = "save"
                self.statusBar().showMessage('đang sửa')
            # da luu
            else:
                # kiem tra text sua la rong
                # if self.ui.textEdit_xuat.toPlainText().strip() != "":
                self.count = "no save"
                # da sua
                self.ui.pushButton_suatu.setText("Sửa từ")
                
                # phan tich tu
                list_word = self.ui.textEdit_xuat.toPlainText().split("\n") # 
                e_word = list_word[0].split(":")[1].strip()
                e_type = list_word[1].split(":")[1].strip()
                e_mean = list_word[4].split(":")[1].strip()
                e_des = list_word[3].split(":")[1].strip()
                e_pronouce = list_word[2].split(":")[1].strip()
                print(list_word)
                # #update database
                if self.statusSua_Them == True and e_word != "":
                    try :
                        query = f'INSERT INTO word (e_word, e_type, e_pronouce, e_des, e_mean) VALUES ("{e_word}", "{e_type}","{e_pronouce}", "{e_des}","{e_mean}")'
                    # sua them QMessage
                        ret = QMessageBox.question(self, 'MessageBox', "Thêm từ thành công", QMessageBox.Ok)

                    except:

                        query = f"INSERT INTO word (e_word, e_type, e_pronouce, e_des, e_mean) VALUES ('{e_word}', '{e_type}','{e_pronouce}', '{e_des}','{e_mean}')"
                        ret = QMessageBox.question(self, 'MessageBox', "Thêm từ thành công", QMessageBox.Ok)

                    self.database.execute(query)
                    self.statusBar().showMessage('đã thêm từ')
                    self.statusSua_Them = False
                    self.ui.textEdit_xuat.setReadOnly(True)    
                elif self.statusSua_Them == True and e_word == "":
                    self.statusBar().showMessage("bạn cần định nghĩa từ khi thêm từ")
                    ret = QMessageBox.question(self, 'MessageBox', "bạn cần định nghĩa từ khi thêm từ", QMessageBox.Ok)

                elif self.statusSua_Them == False and e_word == "":
                    self.statusBar().showMessage("bạn cần định nghĩa từ khi sửa từ")
                    ret = QMessageBox.question(self, 'MessageBox', "bạn cần định nghĩa từ khi thêm từ", QMessageBox.Ok)

                elif self.statusSua_Them == False and e_word != "":  
                    try:
                        query = f'UPDATE word SET e_type = "{e_type}", e_mean = "{e_mean}", e_des = "{e_des}", e_pronouce = "{e_pronouce}" WHERE e_word = "{e_word}" '
                        ret = QMessageBox.question(self, 'MessageBox', "đã sửa từ", QMessageBox.Ok)


                    except:  
                        query = f"UPDATE word SET e_type = '{e_type}', e_mean = '{e_mean}', e_des = '{e_des}', e_pronouce = '{e_pronouce}' WHERE e_word = '{e_word}' "
                        ret = QMessageBox.question(self, 'MessageBox', "đã sửa từ", QMessageBox.Ok)

                    self.statusBar().showMessage('đã sửa từ')

                    self.database.execute(query)
                
                    self.statusSua_Them = False
                    self.ui.textEdit_xuat.setReadOnly(True)    
                # else:
                #     self.statusBar().showMessage("không thể lưu từ này dưới dạng rỗng")
        else:
            print("khong duoc")

    def xoa(self):
        # chi xoa duoc khi da co ket qua truy van 
        if self.ui.textEdit_xuat.toPlainText().strip() != "":
            
            

            
            if self.ui.textEdit_xuat.toPlainText() != "từ này không tồn tại, bạn có thể thêm từ này bằng cách nhấn sửa và lưu":
                print(" duoc")
                list_word = self.ui.textEdit_xuat.toPlainText().split("\n") # 
                word = list_word[0].split(":")[1].strip()
                query = f" DELETE FROM word WHERE e_word = '{word}'"
                print(f" list \n {list_word}")
                # word = list_word[0].split(":")[1].strip()
                print(word)

                self.database.execute(query)
                self.statusBar().showMessage("da xoa tu")
                self.ui.textEdit_xuat.setPlainText("")
                ret = QMessageBox.question(self, 'MessageBox', "xóa từ thành công", QMessageBox.Ok)

            else:
                ret = QMessageBox.question(self, 'MessageBox', "từ này không tồn tại để xóa", QMessageBox.Ok)

                self.statusBar().showMessage("từ này không tồn tại để xóa")
           
          
            
        else:
            print("khong duoc")

    def dich(self):
        # reset ui xuat text
        self.ui.textEdit_xuat.setReadOnly(True)
        if len(self.ui.textEdit_nhap.toPlainText().strip().split(" ")) > 0:

            self.ui.textEdit_xuat.setPlainText("")
            self.ui.pushButton_suatu.setText("Sửa từ")
            self.count = "no save"
            self.statusBar().showMessage("")
            #kiem tra su hop le 
            if self.ui.textEdit_nhap.toPlainText().strip() != "":
                text = self.ui.textEdit_nhap.toPlainText().strip()
                self.list_word_items.append(text)
                self.list_word_items_set = set(self.list_word_items)
                self.addItem(self.list_word_items_set)

                query = f"SELECT * FROM word WHERE e_word like '{text}'"
                get_return = self.database.execute(query, "get data")
                print(get_return)
                if len(get_return)  < 1:
                    self.ui.textEdit_xuat.setPlainText("từ này không tồn tại, bạn có thể thêm từ này bằng cách nhấn sửa và lưu")
                    self.statusSua_Them = True
                else:
                    word = get_return[0][0]
                    tu_loai = get_return[0][1]
                    phat_am = get_return[0][2]
                    mieu_ta = get_return[0][3]
                    nghia = get_return[0][4]
                    self.ui.textEdit_xuat.setPlainText(f"Từ: {word}\nTừ loại: {tu_loai}\nPhát âm: {phat_am}\nMiêu tả: {mieu_ta}\nNghĩa: {nghia}")

            else:
                print("khong duoc")
                ret = QMessageBox.question(self, 'MessageBox', "vui lòng nhập từ để dịch", QMessageBox.Ok)

                self.statusBar().showMessage("vui lòng nhập từ để dịch")
        # else:
        #     content = self.ui.textEdit_nhap.toPlainText().strip()
        #     # print(content)
        #     # result = self.translator.translate("this is content",src="en", dest='vi').text
        #     # print(result)

        #     try:
        #         result = self.translator.translate(content,src="en", dest='vi').text
        #         self.ui.textEdit_xuat.setPlainText(result)
        #     except:
        #         self.ui.textEdit_xuat.setPlainText("lỗi có 1 số vấn đề nên không thể dịch được")

    def doc(self):
        if self.ui.textEdit_nhap.toPlainText().strip() != "":
            print(" duoc")
        else:
            print("khong duoc")


    def addItem(self, set_items):
        self.ui.listWidget_tudatra.clear()

        for x in set_items:
            self.ui.listWidget_tudatra.addItem(x)
    def curentItems(self):
        text = self.ui.listWidget_tudatra.currentItem().text()
        self.ui.textEdit_nhap.setPlainText(text)
        self.dich()

    def run(self):
        self.ui.textEdit_xuat.setReadOnly(True)
        self.ui.pushButton_dichtu.clicked.connect(self.dich)
        self.ui.pushButton_suatu.clicked.connect(self.sua)
        self.ui.pushButton_xoatu.clicked.connect(self.xoa)
        self.ui.pushButton_themtu.clicked.connect(self.them)
        # self.ui.listWidget_tudatra.itemDoubleClicked.connect(self.curentItems)
        self.ui.listWidget_tudatra.clicked.connect(self.curentItems)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    # app1 = QtWidgets.QApplication(sys.argv)
    MainWindow = App()
    # MainWindow1 = App()
    # runtrigger()
    # ui = Ui_MainWindow()
    # ui.setupUi(MainWindow)
    # MainWindow.show()
    sys.exit(app.exec_())
